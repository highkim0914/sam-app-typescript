AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-app

  Sample SAM Template for sam-app
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    Tracing: Active
    Environment:
      Variables:
        HOST : "localhost"
        PORT : "5432"
        USER : "highkim0914"
        PASSWORD : ""
        DB : "test"
    Layers:
      - !Ref AwsLayer
      - !Ref DBLayer
    Architectures:
      - x86_64
    Runtime: nodejs16.x
  Api:
    TracingEnabled: True

Resources:
  AwsLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: AwsLayer
      Description: aws sdk layer
      ContentUri: layers/aws-layer
      CompatibleRuntimes:
        - nodejs16.x
      RetentionPolicy: Retain
  DBLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: DBLayer
      Description: db layer
      ContentUri: layers/db-layer
      CompatibleRuntimes:
        - nodejs16.x
      RetentionPolicy: Retain
  MainFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: src/
      Handler: main.lambdaHandler
      Events:
        Nested:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /main
            Method: get
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints: 
        - main.ts
        External:
        - ts-postgres
        - aws-lambda
        - esbuild
